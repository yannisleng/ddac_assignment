@model ManageShipmentModel

@functions {
    public string GetStatusColor(string status)
    {
        switch (status.ToLower())
        {
            case "pending":
                return "bg-gray-100 text-gray-800";
            case "picked up":
                return "bg-yellow-100 text-yellow-800";
            case "in transit":
                return "bg-blue-100 text-blue-800";
            case "delivered":
                return "bg-green-100 text-green-800";
            case "returned":
                return "bg-red-100 text-red-800";
            default:
                return "bg-red-100 text-red-800";
        }
    }
}

@{
    ViewData["Title"] = "_ShipmentSchedulePartial";
}

@if ((Model != null && Model.Shipments?.Count > 0))
{
    foreach (var shipment in Model.Shipments!)
    {
        <tr class="bg-white hover:bg-gray-50 dark:bg-neutral-900 dark:hover:bg-neutral-800">
            <td class="size-px">
                <span class="block px-6 py-2">
                    <span class="font-mono text-sm text-ok-boss-6"># @shipment.ShipmentId</span>
                </span>
            </td>
            @{
                for (int i = 0; i < Model.ShipmentSlots!.Count(); i++)
                {
                    if ((Model.ShipmentSlots![i].ShipmentIds!.Contains(shipment.ShipmentId)))
                    {
                        if (!(i != 0 && (Model.ShipmentSlots![i].ShipmentIds!.Contains(shipment.ShipmentId)) ==
                        Model.ShipmentSlots![i - 1].ShipmentIds!.Contains(shipment.ShipmentId)))
                        {
                            <td class="size-px">
                                <span class="block px-6 py-2 flex flex-col">
                                    @{
                                        foreach (var transition in Model.Transitions!)
                                        {
                                            if (shipment.ShipmentId == transition.ShipmentId)
                                            {
                                                if (shipment.ShipmentStatus == "Pending")
                                                {
                                                    <span class="text-sm text-gray-600 dark:text-neutral-400 font-semibold capitalize">
                                                        @shipment.SenderName!.ToLower()
                                                    </span>
                                                    <a href="http://maps.google.com/?q=@shipment.PickupAddress.Replace("||", ", ") target="_blank" class="mt-1.5 mb-2.5 leading-none">
                                                        <span class="text-sm text-[#86909c] capitalize">
                                                            @shipment.PickupAddress.Replace("||", ", ")!.ToLower()
                                                        </span>
                                                    </a>
                                                    <span class="text-xs text-[#86909c] font-light mb-5">
                                                        Delivery Date: @DateTime.Parse(Model.ShipmentSlots![i].ShipmentDate!.ToString()!).ToShortDateString()
                                                    </span>
                                                }
                                                else if (shipment.ShipmentStatus != "Delivered")
                                                {
                                                    <span class="text-sm text-gray-600 dark:text-neutral-400 font-semibold">
                                                        Warehouse @transition.Address.Split("||").Last()
                                                    </span>
                                                    <a href="http://maps.google.com/?q=@transition.Address.Replace("||", ", ") target="_blank" class="mt-1.5 mb-2.5 leading-none">
                                                        <span class="text-sm text-[#86909c] capitalize">
                                                            @transition.Address.Replace("||", ", ")!.ToLower()
                                                        </span>
                                                    </a>
                                                    <span class="text-xs text-[#86909c] font-light mb-5">
                                                        Delivery Date: @DateTime.Parse(Model.ShipmentSlots![i].ShipmentDate!.ToString()!).ToShortDateString()
                                                    </span>
                                                }
                                            }
                                        }
                                    }

                                    <span class="font-mono text-sm text-ok-boss-6 mb-7"># @Model.ShipmentSlots![i].ShipmentSlotId</span>
                                </span>
                            </td>
                        }
                    }
                }
            }
            <td class="size-px">
                <span class="block px-6 py-2 flex flex-col">
                    <span class="text-sm text-gray-600 dark:text-neutral-400 font-semibold capitalize">@shipment.ReceiverName!.ToLower()</span>
                    <a href="http://maps.google.com/?q=@shipment.DeliveryAddress.Replace("||", ", ")" target="_blank" class="mt-1.5 mb-2.5 leading-none">
                        <span class="text-sm text-[#86909c] capitalize">
                            @shipment.DeliveryAddress.Replace("||", ", ").ToLower()
                        </span>
                    </a>
                    <a href="tel:@shipment.ReceiverPhoneNumber">
                        <span class="text-xs text-[#86909c] font-light flex items-center mb-7">
                            <svg t="1719392098389" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1601" width="14" height="14" data-spm-anchor-id="a313x.search_index.0.i3.51113a81EjPI1R"><path d="M284.484267 128.546133c-136.669867 101.973333-153.6 325.717333-32.034134 551.253334 118.801067 220.3648 307.063467 337.442133 501.725867 277.333333 50.602667-15.616 99.157333-58.862933 99.157333-107.5712 0.017067-84.667733-96.8704-253.269333-169.437866-266.359467-20.360533-3.652267-44.970667 3.6864-81.578667 19.490134-3.7888 1.6384-7.68 3.362133-11.6736 5.1712l-9.1136 4.1984c-8.9088 4.1472-16.401067 7.7824-29.1328 14.08l-5.4784 2.696533-0.256-0.238933a122.043733 122.043733 0 0 1-6.638933-6.9632c-10.496-11.844267-22.869333-29.2864-35.345067-49.800534l-3.618133-6.0416c-16.759467-28.330667-31.6416-58.811733-41.3184-84.206933l-0.904534-2.440533 23.125334-9.898667c4.778667-2.048 9.335467-4.078933 14.114133-6.212267l13.482667-6.0928 10.376533-4.829866c26.282667-12.4416 41.8816-21.4528 50.653867-30.993067C620.714667 366.557867 521.352533 103.082667 439.825067 87.893333c-48.503467-9.045333-107.1104 6.7072-150.5792 37.205334l-4.778667 3.447466z m142.830933 26.453334c10.410667 1.9456 40.7552 48.810667 63.5392 109.226666 11.383467 30.1568 20.002133 60.586667 24.029867 84.599467l0.682666 4.164267a139.946667 139.946667 0 0 1 1.774934 20.48l-0.1024 3.140266-4.3008 2.474667-2.3552 1.314133c-7.543467 4.096-17.527467 8.994133-29.559467 14.523734l-19.797333 8.891733c-6.997333 3.072-14.062933 6.144-22.715734 9.813333l-31.402666 13.3632-4.676267 2.184534-1.570133 0.836266-0.887467-0.887466c-1.877333-1.28-3.498667 3.293867-15.991467 38.775466 20.736 88.814933 108.3392 232.942933 162.133334 233.028267l6.638933-0.733867c1.416533-0.170667 2.218667-0.324267 2.952533-0.529066l4.539734-1.621334 3.908266-1.6896 14.08-6.826666 23.944534-11.7248c3.6864-1.757867 7.168-3.413333 11.0592-5.205334l10.922666-4.949333 5.2224-2.286933a303.8208 303.8208 0 0 1 31.9488-12.100267l3.805867-1.058133c4.608-1.2288 7.338667-1.6896 6.656-1.809067 34.133333 6.144 113.288533 143.872 113.271467 199.168 0 11.605333-25.736533 34.542933-51.029334 42.359467-158.037333 48.7936-316.484267-49.732267-421.495466-244.5312-107.076267-198.6048-92.928-385.262933 12.765866-464.128 29.422933-21.9648 71.697067-33.911467 102.007467-28.2624z" fill="#86909c" p-id="1602"></path><path d="M670.1056 75.946667c92.9792 75.776 120.149333 191.3344 79.906133 305.373866l-2.218666 6.109867-63.931734-23.927467c32.836267-87.773867 14.848-173.192533-52.5312-230.997333l-4.369066-3.652267 43.144533-52.906666z" fill="#1afa29" p-id="1603" data-spm-anchor-id="a313x.search_index.0.i4.51113a81EjPI1R" class="selected"></path></svg>
                            <span class="ml-1">@shipment.ReceiverPhoneNumber</span>
                        </span>
                    </a>
                </span>
            </td>
            <td class="size-px whitespace-nowrap">
                <button type="button" class="block">
                    <span class="block px-6 py-2">
                        <span class="py-1 px-2 inline-flex items-center gap-x-1 text-xs font-medium @GetStatusColor(shipment.ShipmentStatus) rounded-full dark:bg-red-500/10 dark:text-red-500">
                            @shipment.ShipmentStatus
                        </span>
                    </span>
                </button>
            </td>
            <td class="size-px whitespace-nowrap">
                <div class="px-6 py-1.5">
                    <button data-shipment-id="@shipment.ShipmentId"
                            data-shipment-status="@shipment.ShipmentStatus"
                            data-has-pod="@(shipment.ProofOfDelivery != null)"
                            class="openModalButton inline-flex items-center gap-x-1 text-sm text-ok-boss-6 decoration-2 hover:underline font-medium">
                        @(shipment.ShipmentStatus == "Delivered" ? "View" : "Update")
                    </button>
                </div>
            </td>
        </tr>
    }

    <!-- Modal -->
    <div id="hs-focus-management-modal" class="bg-slate-900/90 hidden size-full fixed top-0 start-0 z-[999] overflow-x-hidden overflow-y-auto pointer-events-none">
        <div id="modalContent" class="mt-7 opacity-100 duration-500 mt-0 opacity-0 ease-out transition-all sm:max-w-lg sm:w-full m-3 sm:mx-auto">
            <div class="flex flex-col bg-white border shadow-sm rounded-xl pointer-events-auto dark:bg-neutral-800 dark:border-neutral-700 dark:shadow-neutral-700/70">
                <div class="flex justify-between items-center py-3 px-4 border-b dark:border-neutral-700">
                    <h3 class="font-bold text-gray-800 dark:text-white" id="modalTitle">
                        Update Shipment
                    </h3>
                    <button type="button" class="flex justify-center items-center size-7 text-sm font-semibold rounded-full border border-transparent text-gray-800 hover:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:text-white dark:hover:bg-neutral-700" id="closeModalButton">
                        <span class="sr-only">Close</span>
                        <svg class="flex-shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M18 6 6 18"></path>
                            <path d="m6 6 12 12"></path>
                        </svg>
                    </button>
                </div>
                <div id="modalBody" class="p-4 overflow-y-auto"></div>
            </div>
        </div>
    </div>
}
else
{
    <p class="ml-6 h-[150px] flex items-center">No shipments found.</p>
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/shipment_table_partial.js"></script>